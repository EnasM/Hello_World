version: 2.1
commands:
    print_pipeline_id:
        description: "a very simple command"
        parameters:
            id:
                type: string
        steps:
            - run: echo << parameters.id>>
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
  print_hello:
    docker:
        - image: circleci/node:13.8.0
    steps:
        - run:
            name: "Print Hello"
            command: "echo Hello"
  print_world:
    docker:
     - image: circleci/node:13.8.0
    steps:
    - run:
        name: "Print world"
        command: "echo World"
  print_my_name:
    docker:
        - image: cimg/base:2020.01
    steps:
        - run: 
            name: "Printing my name"
            command: echo ${myName}
  save_hello_world_output:
        docker:
            - image: circleci/node:13.8.0
        steps:
            - run:
                name: "Print Hello world to a file"
                command: echo "Hello World" > ~/output.txt
            - persist_to_workspace:
                root: ~/
                paths:
                  - output.txt
  print_output_file:
        docker:
            - image: circleci/node:13.8.0
        steps:
            - attach_workspace:
                at: ~/
            - run: cat ~/output.txt
  print_pipeline_id_Command:
    docker:
        - image: circleci/node:13.8.0
    steps:
        - print_pipeline_id:
            id: << pipeline.id >>
  onFailJob:
    docker:
        - image: circleci/node:13.8.0
    steps:
        - run: return 1
        - run: echo "Job failed"
            when: on_fail

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
      - print_hello
      - print_world:
            requires: 
                - print_hello
      - print_my_name
      - save_hello_world_output
      - print_output_file:
            requires:
                - save_hello_world_output
      - print_pipeline_id_Command